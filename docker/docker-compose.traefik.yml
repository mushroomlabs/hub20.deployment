# This docker compose is for deploying hub20 web application and
# services and using traefik as the proxy. The service definition for
# an ethereum node is not included. You can use your own ethereum node
# or infura, defined by WEB3_PROVIDER_URI environment variable

version: "3.7"

x-hub20_service: &hub20_service
  image: "mushroomlabs/hub20:${HUB20_VERSION:-latest}"
  restart: unless-stopped
  depends_on:
    redis:
      condition: service_healthy
    db:
      condition: service_healthy

  env_file:
    - .env

  environment: &hub20_environment
    DJANGO_SETTINGS_MODULE: hub20.api.settings
    HUB20_DATA_FOLDER: /var/hub20
    HUB20_STATIC_ROOT: /var/hub20/static
    HUB20_BROKER_URL: redis://redis:6379/0
    HUB20_CACHE_BACKEND: django_redis.cache.RedisCache
    HUB20_CACHE_LOCATION: redis://redis:6379/1
    HUB20_CHANNEL_LAYER_HOST: redis
    HUB20_CORS_HEADERS_ENABLED: 1
    HUB20_DATABASE_HOST: db
    HUB20_DATABASE_PORT: 5432
    HUB20_DATABASE_NAME: hub20
    HUB20_DATABASE_USER: hub20
    HUB20_EMAIL_BACKEND: django.core.mail.backends.console.EmailBackend

  volumes:
    - static-data:/var/hub20/static

services:
  traefik:
    image: "traefik:v2.4"
    container_name: "traefik"

    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.watch=true"
      - "--providers.docker.network=hub20_network"
      - "--certificatesresolvers.hub20_http_resolver.acme.email=${ACME_ACCOUNT_EMAIL}"
      - "--certificatesresolvers.hub20_http_resolver.acme.httpchallenge.entrypoint=web"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.websecure.address=:443"

    ports:
      - "80:80"
      - "443:443"
    volumes:
      - traefik-data:/etc/traefik
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  redis:
    image: redis:latest
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    restart: unless-stopped

  db:
    image: postgres:12
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${HUB20_DATABASE_NAME:-hub20}"]
      interval: 5s
      retries: 5
    restart: unless-stopped
    environment:
      POSTGRES_DB: hub20
      POSTGRES_USER: hub20
      POSTGRES_PASSWORD: "${HUB20_DATABASE_PASSWORD}"

  raiden:
    image: "mushroomlabs/raiden:${RAIDEN_VERSION:-2.0.0}"
    restart: on-failure

    env_file:
      - .env

    environment:
      RAIDEN_ACCEPT_DISCLAIMER: "true"
      RAIDEN_API_ADDRESS: 0.0.0.0:5001
      RAIDEN_ENABLE_MONITORING: "true"
      RAIDEN_ENVIRONMENT_TYPE: development
      RAIDEN_KEYSTORE_PATH: /keystore
      RAIDEN_WEB_UI: "false"
      RAIDEN_MATRIX_SERVER: "${HUB20_RAIDEN_TRANSPORT_SERVICE_URL:-https://transport.demo001.env.raiden.network}"
      RAIDEN_PATHFINDING_SERVICE_ADDRESS: "${HUB20_RAIDEN_PATH_FINDING_SERVICE_URL:-https://pfs.demo001.env.raiden.network}"
      RAIDEN_ROUTING_MODE: pfs
      RAIDEN_PRIVATE_KEY: "${HUB20_RAIDEN_ACCOUNT_PRIVATE_KEY}"

    volumes:
      - raiden-data:/root/.raiden

  static_file_server:
    image: caddy
    command: "caddy file-server --root /static --browse"
    env_file:
      - .env

    ports:
      - "8083:80"

    labels:
      - traefik.enable=true
      - "traefik.http.routers.hub20_assets.rule=Host(`${HUB20_HOST_DOMAIN}`) && PathPrefix(`/static`)"
      - traefik.http.routers.hub20_assets.entrypoints=web,websecure
      - traefik.http.routers.hub20_assets.tls=true
      - traefik.http.routers.hub20_assets.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20_assets.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20_assets.middlewares=hub20_assets-https
      - traefik.http.routers.hub20_assets.middlewares=hub20_assets-stripprefix
      - traefik.http.middlewares.hub20_assets-https.redirectscheme.scheme=https
      - traefik.http.middlewares.hub20_assets-stripprefix.stripprefix.prefixes=/static

    volumes:
      - static-data:/static

  # Admin backend
  admin:
    <<: *hub20_service
    environment:
      <<: *hub20_environment
      HUB20_URLCONF_MODULE: hub20.admin.urls

    command: >
      /bin/bash -c '
        django-admin collectstatic --noinput
        uvicorn hub20.api.asgi:application --port 8081 --host 0.0.0.0 --root-path="/admin"
      '

    ports:
      - "8081:8081"

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.hub20_admin-https.redirectscheme.scheme=https
      - "traefik.http.routers.hub20_admin.rule=Host(`${HUB20_HOST_DOMAIN}`) && PathPrefix(`/admin`)"
      - traefik.http.routers.hub20_admin.entrypoints=web,websecure
      - traefik.http.routers.hub20_admin.tls=true
      - traefik.http.routers.hub20_admin.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20_admin.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20_admin.middlewares=hub20_admin-https


  # Web API
  web:
    <<: *hub20_service
    command: >
      /bin/bash -c "
        django-admin migrate
        django-admin collectstatic --noinput
        uvicorn hub20.api.asgi:application --port 8080 --host 0.0.0.0 --proxy-headers
      "

    ports:
      - "8080:8080"

    labels:
      - traefik.enable=true
      - traefik.http.middlewares.hub20-https.redirectscheme.scheme=https
      - "traefik.http.routers.hub20.rule=Host(`${HUB20_HOST_DOMAIN}`)"
      - traefik.http.routers.hub20.entrypoints=web,websecure
      - traefik.http.routers.hub20.tls=true
      - traefik.http.routers.hub20.tls.certresolver=hub20_http_resolver
      - "traefik.http.routers.hub20.tls.domains[0].main=${HUB20_HOST_DOMAIN}"
      - traefik.http.routers.hub20.middlewares=hub20-https

  # Celery app
  celery:
    <<: *hub20_service
    command: celery -A hub20.api worker -l info

  # Celery beat (periodic tasks)
  celery_beat:
    <<: *hub20_service
    command: celery -A hub20.api beat -l info -S django

  # Background command to listen to blockchain and raiden events
  job_listen_events:
    <<: *hub20_service
    command: django-admin run_event_listeners

networks:
  default:
    external: true
    name: hub20_network

volumes:
  traefik-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${TRAEFIK_DATA_STORAGE_PATH:-/srv/traefik}

  raiden-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${RAIDEN_DATA_STORAGE_PATH:-/srv/raiden}

  postgres-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${POSTGRES_DATA_STORAGE_PATH:-/srv/postgresql}

  static-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${WEB_DATA_STORAGE_PATH:-/var/www/hub20}
